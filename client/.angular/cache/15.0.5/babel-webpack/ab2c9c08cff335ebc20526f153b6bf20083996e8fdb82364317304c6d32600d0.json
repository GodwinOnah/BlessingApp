{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/pagination\";\nimport * as i2 from \"@angular/forms\";\nexport class PaginationSharedComponetComponent {\n  constructor() {\n    this.pageChange = new EventEmitter();\n  }\n  ngOnInit() {}\n  sharedPageChange(event) {\n    this.pageChange.emit(event.page);\n  }\n}\nPaginationSharedComponetComponent.ɵfac = function PaginationSharedComponetComponent_Factory(t) {\n  return new (t || PaginationSharedComponetComponent)();\n};\nPaginationSharedComponetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaginationSharedComponetComponent,\n  selectors: [[\"app-pagination-shared-componet\"]],\n  inputs: {\n    pageSize: \"pageSize\",\n    pageNumber: \"pageNumber\",\n    totalPageNumber: \"totalPageNumber\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  decls: 1,\n  vars: 4,\n  consts: [[\"previousText\", \"\\u2039\", \"nextText\", \"\\u203A\", \"firstText\", \"\\u00AB\", \"lastText\", \"\\u00BB\", 3, \"boundaryLinks\", \"totalItems\", \"ngModel\", \"itemsPerPage\", \"pageChanged\"]],\n  template: function PaginationSharedComponetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"pagination\", 0);\n      i0.ɵɵlistener(\"pageChanged\", function PaginationSharedComponetComponent_Template_pagination_pageChanged_0_listener($event) {\n        return ctx.sharedPageChange($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"boundaryLinks\", true)(\"totalItems\", ctx.totalPageNumber)(\"ngModel\", ctx.pageNumber)(\"itemsPerPage\", ctx.pageSize);\n    }\n  },\n  dependencies: [i1.PaginationComponent, i2.NgControlStatus, i2.NgModel]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}