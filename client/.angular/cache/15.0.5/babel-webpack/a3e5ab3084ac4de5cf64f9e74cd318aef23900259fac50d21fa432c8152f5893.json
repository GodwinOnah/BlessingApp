{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../account.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../text-inputs/text-inputs.component\";\nimport * as i7 from \"@angular/material/dialog\";\nexport class LoginComponent {\n  constructor(formbuilder, router, accountService, activatedRoute, toastr) {\n    this.formbuilder = formbuilder;\n    this.router = router;\n    this.accountService = accountService;\n    this.activatedRoute = activatedRoute;\n    this.toastr = toastr;\n    this.errors = null;\n    this.view = true;\n    this.changetype = true;\n    this.successful = false;\n    this.RegularExpression = \"^(?=(.*[a-z]){1,})(?=(.*[\\\\d]){1,})(?=(.*[\\\\W]){1,})(?!.*\\\\s).{7,30}$\";\n    this.loginForm = this.formbuilder.group({\n      Email: ['', [Validators.required]],\n      Password: ['', [Validators.required]]\n    });\n    this.returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl'] || '/prodshopmod';\n  }\n  onLoginSubmit() {\n    this.accountService.Login(this.loginForm.value).subscribe({\n      next: user => {\n        this.closeDialog();\n        if (user.email === \"godwinbillions@gmail.com\") this.router.navigateByUrl('/Admin');else {\n          this.router.navigateByUrl('/products');\n        }\n        this.successful = true;\n        this.toastr.success(\"Login succecssfully\");\n        this.accountService.autoLogout();\n      },\n      error: error => {\n        this.toastr.success(\"Wrong password\");\n        this.toastr.success(\"Also check connection to server\");\n        this.errors = error.errors;\n      }\n    });\n  }\n  openRegDialog() {\n    this.accountService.openRegDialog();\n  }\n  closeDialog() {\n    this.accountService.closeDialog(); // <- Close the mat dialog\n  }\n\n  openConfirmEmailDialog() {\n    this.accountService.openConfirmEmailDialog();\n  }\n  viewpass() {\n    this.view = !this.view;\n    this.changetype = !this.changetype;\n  }\n  success() {\n    if (this.successful = true) return true;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserAccountService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 33,\n  vars: 9,\n  consts: [[2, \"background-color\", \"lightgray\", \"padding-bottom\", \"20px\", \"border\", \"3px solid green\"], [1, \"align-content-left\"], [\"mat-dialog-close\", \"\", 1, \"btn\", \"btn-danger\", 2, \"margin-top\", \"15px\", \"margin-left\", \"5px\"], [1, \"text-center\", 2, \"color\", \"blue\", \"padding\", \"0\"], [1, \"d-flex\", \"justify-content-center\", 2, \"width\", \"auto\", \"height\", \"auto\"], [1, \"col-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mt-5\"], [3, \"formControl\", \"type\", \"label\"], [1, \"form-group\"], [1, \"eyeicon\", 3, \"click\"], [3, \"ngClass\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-success\", 2, \"margin-top\", \"10px\", 3, \"disabled\"], [1, \"d-flex\", \"justify-content-between\", \"mt-4\", 2, \"color\", \"blue\", \"font-size\", \"smaller\", \"cursor\", \"pointer\"], [3, \"click\"], [\"scrollamount\", \"4\"], [2, \"color\", \"red\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵtext(3, \" x \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h1\");\n      i0.ɵɵtext(6, \"Signin\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onLoginSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"app-text-inputs\", 8);\n      i0.ɵɵelementStart(12, \"div\", 9);\n      i0.ɵɵelement(13, \"app-text-inputs\", 8);\n      i0.ɵɵelementStart(14, \"span\", 10);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_14_listener() {\n        return ctx.viewpass();\n      });\n      i0.ɵɵelement(15, \"i\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 12)(17, \"button\", 13);\n      i0.ɵɵtext(18, \" Login \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 14)(20, \"a\", 15);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_20_listener() {\n        return ctx.openConfirmEmailDialog();\n      });\n      i0.ɵɵtext(21, \"Forgot Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"a\", 15);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_22_listener() {\n        return ctx.openRegDialog();\n      });\n      i0.ɵɵtext(23, \"New User\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(24, \"div\")(25, \"Marquee\", 16);\n      i0.ɵɵtext(26, \"For full testing of this test website, and after registration as one of my customers, you are permited to login as the admin to have access to the admin page where you can view or delete customers orders, , upload or delete new or old product(s), add advert text for customers notifications, etc. Use: \");\n      i0.ɵɵelementStart(27, \"strong\", 17);\n      i0.ɵɵtext(28, \" email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(29, \"godwinbillions@gmail.com; \");\n      i0.ɵɵelementStart(30, \"strong\", 17);\n      i0.ɵɵtext(31, \"password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \"Gut101@@ to see this. If you cant access it for any reason, send me a mail on thisaremyfiles@gmail.com. Thanks. \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.loginForm.controls[\"Email\"])(\"type\", \"email\")(\"label\", \"Email Address\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.loginForm.controls[\"Password\"])(\"type\", ctx.changetype ? \"password\" : \"text\")(\"label\", \"Password\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.view ? \"fa fa-eye\" : \"fa fa-eye-slash\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i5.NgClass, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i6.TextInputsComponent, i7.MatDialogClose],\n  styles: [\".form-group[_ngcontent-%COMP%] {\\n  position: relative;\\n  width: 100%;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   app-text-inputs[_ngcontent-%COMP%] {\\n  padding-right: 35px;\\n}\\n\\n.eyeicon[_ngcontent-%COMP%] {\\n  position: absolute;\\n  right: -1px;\\n  top: 13px;\\n  padding: 8px;\\n  margin-left: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQWNjb3VudC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUVBO0VBQ0ksbUJBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFNBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWdyb3Vwe1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLmZvcm0tZ3JvdXAgYXBwLXRleHQtaW5wdXRze1xuICAgIHBhZGRpbmctcmlnaHQ6IDM1cHg7XG59XG5cbi5leWVpY29ue1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogLTFweDtcbiAgICB0b3A6IDEzcHg7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;;;;AAcxD,OAAM,MAAOC,cAAc;EAUzBC,YACUC,WAAuB,EACvBC,MAAe,EACfC,cAAmC,EACnCC,cAA+B,EAC/BC,MAAsB;IAJtB,gBAAW,GAAXJ,WAAW;IACX,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IACd,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IAdhB,WAAM,GAAqB,IAAI;IAC/B,SAAI,GAAa,IAAI;IACrB,eAAU,GAAa,IAAI;IAC3B,eAAU,GAAa,KAAK;IAE5B,sBAAiB,GAAC,uEAAuE;IAezF,cAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAC,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACjCC,QAAQ,EAAE,CAAC,EAAE,EAAC,CAACX,UAAU,CAACU,QAAQ,CAAC;KACxC,CAAC;IANA,IAAI,CAACE,SAAS,GAAG,IAAI,CAACN,cAAc,CAACO,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAE,cAAc;EACxF;EAOAC,aAAa;IACX,IAAI,CAACV,cAAc,CAACW,KAAK,CAAC,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,CAACC,SAAS,CAAC;MACxDC,IAAI,EAAGC,IAAI,IAAG;QACZ,IAAI,CAACC,WAAW,EAAE;QAClB,IAAGD,IAAI,CAACE,KAAK,KAAK,0BAA0B,EAC5C,IAAI,CAACnB,MAAM,CAACoB,aAAa,CAAC,QAAQ,CAAC,CAAC,KAChC;UAAE,IAAI,CAACpB,MAAM,CAACoB,aAAa,CAAC,WAAW,CAAC;;QAC5C,IAAI,CAACC,UAAU,GAAG,IAAI;QACtB,IAAI,CAAClB,MAAM,CAACmB,OAAO,CAAC,qBAAqB,CAAC;QAC1C,IAAI,CAACrB,cAAc,CAACsB,UAAU,EAAE;MAClC,CAAC;MACCC,KAAK,EAAGA,KAAK,IAAG;QACd,IAAI,CAACrB,MAAM,CAACmB,OAAO,CAAC,gBAAgB,CAAC;QACrC,IAAI,CAACnB,MAAM,CAACmB,OAAO,CAAC,iCAAiC,CAAC;QACtD,IAAI,CAACG,MAAM,GAAGD,KAAK,CAACC,MAAM;MAAA;KAC/B,CAAC;EAEJ;EAEAC,aAAa;IACX,IAAI,CAACzB,cAAc,CAACyB,aAAa,EAAE;EACrC;EAEAR,WAAW;IACT,IAAI,CAACjB,cAAc,CAACiB,WAAW,EAAE,CAAC,CAAC;EACrC;;EAEAS,sBAAsB;IACpB,IAAI,CAAC1B,cAAc,CAAC0B,sBAAsB,EAAE;EAC9C;EAEAC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI;IACtB,IAAI,CAACC,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EAEAR,OAAO;IACL,IAAG,IAAI,CAACD,UAAU,GAAG,IAAI,EAAE,OAAO,IAAI;EACxC;;AAhEWxB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCf3BC,8BAAuF;MAI/EA,mBACJ;MAAAA,iBAAS;MAGTA,8BAAyD;MAAKA,sBAAM;MAAAA,iBAAK;MAE7EA,8BAA6E;MAIrCA;QAAA,OAAYC,mBAAe;MAAA,EAAC;MACxDD,+BAA8B;MACtBA,sCAEkB;MAClBA,+BAAwB;MACzBA,sCAEmB;MAClBA,iCAA2C;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAC1CD,yBACK;MACLA,iBAAO;MAIfA,gCAAoB;MAGZA,wBACJ;MAAAA,iBAAS;MAGbA,gCAC2D;MACpDA;QAAA,OAASC,4BAAwB;MAAA,EAAC;MAACD,gCAAe;MAAAA,iBAAI;MACzDA,8BAA6B;MAA1BA;QAAA,OAASC,mBAAe;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAI;MAOzDA,4BAAK;MACyBA,+TAE2E;MAAAA,mCAA4B;MACzHA,wBAAM;MAAAA,iBAAS;MAAAA,2CAA0B;MAAAA,mCACrB;MAAAA,0BAAS;MAAAA,iBAAS;MAAAA,iIAC1C;MAAAA,iBAAU;;;MAvCJA,eAAyB;MAAzBA,yCAAyB;MAEFA,eAA2C;MAA3CA,6DAA2C;MAI5CA,eAA8C;MAA9CA,gEAA8C;MAI3DA,eAA8C;MAA9CA,oEAA8C;MAO1CA,eAA8B;MAA9BA,gDAA8B","names":["Validators","LoginComponent","constructor","formbuilder","router","accountService","activatedRoute","toastr","group","Email","required","Password","returnUrl","snapshot","queryParams","onLoginSubmit","Login","loginForm","value","subscribe","next","user","closeDialog","email","navigateByUrl","successful","success","autoLogout","error","errors","openRegDialog","openConfirmEmailDialog","viewpass","view","changetype","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/godwinonah/Documents/TheBags/client/src/app/Account/login/login.component.ts","/Users/godwinonah/Documents/TheBags/client/src/app/Account/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserAccountService } from '../account.service';\n\n\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  errors : string[] | null = null;\n  view : boolean = true;\n  changetype : boolean = true;\n  successful : boolean = false;\n\n  RegularExpression=\"^(?=(.*[a-z]){1,})(?=(.*[\\\\d]){1,})(?=(.*[\\\\W]){1,})(?!.*\\\\s).{7,30}$\";\n\n  returnUrl:string;\n\n  constructor(\n    private formbuilder:FormBuilder,\n    private router : Router,\n    private accountService : UserAccountService,\n    private activatedRoute : ActivatedRoute,\n    private toastr : ToastrService,\n   \n   ){\n    this.returnUrl = this.activatedRoute.snapshot.queryParams['returnUrl']||'/prodshopmod'\n  }\n\n  loginForm = this.formbuilder.group({\n        Email: ['',[Validators.required]],\n        Password: ['',[Validators.required]]\n  });\n\n  onLoginSubmit(){\n    this.accountService.Login(this.loginForm.value).subscribe({\n      next : user => {\n        this.closeDialog();\n        if(user.email === \"godwinbillions@gmail.com\")\n        this.router.navigateByUrl('/Admin');\n        else{ this.router.navigateByUrl('/products');}\n        this.successful = true;\n        this.toastr.success(\"Login succecssfully\");\n        this.accountService.autoLogout();\n      },\n        error : error => {\n          this.toastr.success(\"Wrong password\")\n          this.toastr.success(\"Also check connection to server\")  \n          this.errors = error.errors}\n    });\n    \n  }\n\n  openRegDialog(){\n    this.accountService.openRegDialog();\n  }\n\n  closeDialog(){\n    this.accountService.closeDialog(); // <- Close the mat dialog\n  }\n\n  openConfirmEmailDialog(){\n    this.accountService.openConfirmEmailDialog();\n  }\n\n  viewpass(){\n    this.view = !this.view;\n    this.changetype = !this.changetype;\n  }\n\n  success(){\n    if(this.successful = true) return true;\n  }\n\n\n \n\n}\n","<div style=\"background-color: lightgray;padding-bottom: 20px;border:3px solid green ;\">\n<div class=\"align-content-left\">\n    <button style=\"margin-top: 15px;margin-left: 5px;\"\n    class=\" btn btn-danger\"  mat-dialog-close>\n        x    \n    </button>\n    </div>\n\n    <div class=\"text-center\" style=\"color:blue ;padding: 0;\"> <h1>Signin</h1></div>\n   \n<div class=\"d-flex justify-content-center\" style=\"width: auto;height: auto;\">\n\n    <div class=\"col-3\">\n\n        <form [formGroup] = \"loginForm\" (ngSubmit)=\"onLoginSubmit()\">\n            <div class=\"text-center mt-5\">\n                    <app-text-inputs [formControl]=\"loginForm.controls['Email']\" \n                    [type]=\"'email'\"  [label]=\"'Email Address'\">\n                    </app-text-inputs>\n                    <div class=\"form-group\">\n                   <app-text-inputs [formControl]=\"loginForm.controls['Password']\" \n                    [type]=\"changetype?'password':'text'\" [label]=\"'Password'\">\n                    </app-text-inputs>\n                    <span class=\"eyeicon\" (click)=\"viewpass()\">\n                    <i [ngClass]=\"view?'fa fa-eye':'fa fa-eye-slash'\">\n                     </i>\n                    </span>\n                    </div>                   \n                </div>\n            \n            <div class=\"d-grid\">    \n                <button    [disabled]=\"loginForm.invalid\" \n                class=\"btn btn-lg btn-success\" type=\"submit\" style=\"margin-top:10px ;\" >\n                    Login\n                </button>\n               \n            </div>\n            <div class=\"d-flex justify-content-between mt-4\" \n            style=\"color: blue;  font-size: smaller; cursor: pointer;\">\n                <a (click)=\"openConfirmEmailDialog()\">Forgot Password</a> \n                <a (click)=\"openRegDialog()\">New User</a>\n            </div>\n           \n        </form>\n    </div>\n</div>\n</div>\n<div>\n    <Marquee scrollamount=\"4\">For full testing of this test website, and after registration as one of my customers, \n        you are permited to login as the admin to have access to the admin page where you can view  or delete customers orders, \n       , upload or delete new  or old product(s), add advert text for customers notifications, etc. Use: <strong style=\"color:red ;\">\n            email:</strong>godwinbillions@gmail.com; <strong \n            style=\"color:red ;\">password:</strong>Gut101@@ to see this. If you cant access it for any reason, send me a mail on thisaremyfiles@gmail.com. Thanks.\n        </Marquee>\n\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}