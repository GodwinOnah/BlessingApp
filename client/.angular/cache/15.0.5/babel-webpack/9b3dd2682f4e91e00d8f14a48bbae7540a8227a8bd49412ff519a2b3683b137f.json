{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../prodshopmod.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../Account/text-inputs/text-inputs.component\";\nfunction ItemsComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelement(1, \"input\", 19);\n    i0.ɵɵelementStart(2, \"label\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const brand_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.productForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", brand_r3.id);\n    i0.ɵɵpropertyInterpolate(\"value\", brand_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", brand_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(brand_r3.name);\n  }\n}\nfunction ItemsComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelement(1, \"input\", 21);\n    i0.ɵɵelementStart(2, \"label\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const type_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.productForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", type_r4.id);\n    i0.ɵɵpropertyInterpolate(\"value\", type_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", type_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r4.name);\n  }\n}\nfunction ItemsComponent_ul_25_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r6, \" \");\n  }\n}\nfunction ItemsComponent_ul_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 22);\n    i0.ɵɵtemplate(1, ItemsComponent_ul_25_li_1_Template, 2, 1, \"li\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIfOf\", ctx_r2.errors);\n  }\n}\nexport class ItemsComponent {\n  constructor(formbuilder, productsService, toastr, matdialog, prodshopmodService) {\n    this.formbuilder = formbuilder;\n    this.productsService = productsService;\n    this.toastr = toastr;\n    this.matdialog = matdialog;\n    this.prodshopmodService = prodshopmodService;\n    this.errors = null;\n    this.brands = [];\n    this.types = [];\n    this.prodName = [];\n    this.prodBrand = [];\n    this.prodType = [];\n    this.prodPictureUrl = \"\";\n    this.formdata = null;\n    this.productForm = this.formbuilder.group({\n      prodName: ['', Validators.required],\n      prodPicture: ['', Validators.required],\n      prodDescription: ['', Validators.required],\n      prodPrice: ['', Validators.required],\n      productBrandId: ['', Validators.required],\n      productTypeId: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.GetProductBrands();\n    this.GetProductTypes();\n    this.GetProducts();\n  }\n  onSubmit() {\n    this.productsService.saveProductPicture(this.formdata).subscribe({\n      next: () => {\n        this.toastr.success(\"Picture saved\");\n        this.sendData();\n      },\n      error: error => {\n        this.toastr.success(\"Picture not saved\");\n        this.errors = error.errors;\n      }\n    });\n  }\n  sendData() {\n    const findName = this.prodName.find(x => x.toLowerCase() === this.productForm?.get('prodName')?.value.toLowerCase());\n    const findPrice = this.prodType.find(x => x === this.productForm?.get('prodPrice')?.value);\n    if (findName && findPrice) {\n      this.toastr.success(\"Product already exist\");\n    } else {\n      this.productsService.UploadProduct(this.productForm.value).subscribe({\n        next: () => {\n          window.location.reload();\n          this.toastr.success(\"Product uploaded\");\n        },\n        error: error => {\n          this.toastr.success(\"Not uploaded\");\n          this.errors = error.errors;\n        }\n      });\n    }\n  }\n  closeDialog() {\n    this.matdialog.closeAll(); // <- Close the mat dialog\n  }\n\n  GetProducts() {\n    this.prodshopmodService.getProducts().subscribe({\n      next: response => {\n        for (let x of response.data) {\n          this.prodName.push(x.prodName);\n          this.prodBrand.push(x.productBrand);\n          this.prodType.push(x.productType);\n        }\n      },\n      error: error => console.log(error)\n    });\n  }\n  GetProductBrands() {\n    this.prodshopmodService.getBrands().subscribe({\n      next: brands => {\n        this.brands = brands;\n      },\n      error: error => console.log(error)\n    });\n  }\n  GetProductTypes() {\n    this.prodshopmodService.getProductTypes().subscribe({\n      next: types => {\n        this.types = types;\n      },\n      error: error => console.log(error)\n    });\n  }\n  uploadPicture(e) {\n    if (e.target.files.length > 0) {\n      const file = e.target.files[0];\n      var formData = new FormData();\n      formData.append('myFiles', file);\n      this.formdata = formData;\n    }\n  }\n}\nItemsComponent.ɵfac = function ItemsComponent_Factory(t) {\n  return new (t || ItemsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProdshopmodService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i2.ProdshopmodService));\n};\nItemsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemsComponent,\n  selectors: [[\"app-items\"]],\n  decls: 30,\n  vars: 15,\n  consts: [[2, \"background-color\", \"lightgray\", \"padding-bottom\", \"40px\", \"border\", \"5px solid skyblue\"], [1, \"align-content-left\"], [1, \"btn\", \"btn-danger\", 2, \"margin-top\", \"15px\", \"margin-left\", \"5px\", 3, \"click\"], [1, \"text-center\", 2, \"color\", \"blue\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"col-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mt-5\"], [3, \"formControl\", \"label\"], [3, \"formControl\", \"type\", \"label\", \"change\"], [3, \"formControl\", \"type\", \"label\"], [1, \"row\"], [1, \"col-6\"], [2, \"font-weight\", \"bolder\"], [\"class\", \"d-flex\", 3, \"formGroup\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-danger list-unstyled\", 4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-success\", 2, \"margin-top\", \"10px\", 3, \"disabled\"], [1, \"d-flex\", 3, \"formGroup\"], [\"formControlName\", \"productBrandId\", \"name\", \"productBrandId\", \"type\", \"radio\", 3, \"id\", \"value\"], [3, \"for\"], [\"formControlName\", \"productTypeId\", \"name\", \"productTypeId\", \"type\", \"radio\", 3, \"id\", \"value\"], [1, \"text-danger\", \"list-unstyled\"], [4, \"ngIf\", \"ngIfOf\"]],\n  template: function ItemsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ItemsComponent_Template_button_click_2_listener() {\n        return ctx.closeDialog();\n      });\n      i0.ɵɵtext(3, \" x \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h1\");\n      i0.ɵɵtext(6, \"Product Upload Page\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function ItemsComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"app-text-inputs\", 8);\n      i0.ɵɵelementStart(12, \"app-text-inputs\", 9);\n      i0.ɵɵlistener(\"change\", function ItemsComponent_Template_app_text_inputs_change_12_listener($event) {\n        return ctx.uploadPicture($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"app-text-inputs\", 8)(14, \"app-text-inputs\", 10);\n      i0.ɵɵelementStart(15, \"div\", 11)(16, \"div\", 12)(17, \"strong\", 13);\n      i0.ɵɵtext(18, \" Brand\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, ItemsComponent_div_19_Template, 4, 5, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 12)(21, \"strong\", 13);\n      i0.ɵɵtext(22, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, ItemsComponent_div_23_Template, 4, 5, \"div\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\");\n      i0.ɵɵtemplate(25, ItemsComponent_ul_25_Template, 2, 1, \"ul\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵelementStart(27, \"div\", 16)(28, \"button\", 17);\n      i0.ɵɵtext(29, \" Upload Product \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.productForm.controls[\"prodName\"])(\"label\", \"Product Name\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.productForm.controls[\"prodPicture\"])(\"type\", \"file\")(\"label\", \"Product Picture\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.productForm.controls[\"prodDescription\"])(\"label\", \"Product Description\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.productForm.controls[\"prodPrice\"])(\"type\", \"number\")(\"label\", \"Price\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.brands);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.types);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.productForm.invalid);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i6.TextInputsComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ItemsComponent","constructor","formbuilder","productsService","toastr","matdialog","prodshopmodService","group","prodName","required","prodPicture","prodDescription","prodPrice","productBrandId","productTypeId","ngOnInit","GetProductBrands","GetProductTypes","GetProducts","onSubmit","saveProductPicture","formdata","subscribe","next","success","sendData","error","errors","findName","find","x","toLowerCase","productForm","get","value","findPrice","prodType","UploadProduct","window","location","reload","closeDialog","closeAll","getProducts","response","data","push","prodBrand","productBrand","productType","console","log","getBrands","brands","getProductTypes","types","uploadPicture","e","target","files","length","file","formData","FormData","append","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/godwinonah/Documents/TheBags/client/src/app/products/productItems/items/items.component.ts","/Users/godwinonah/Documents/TheBags/client/src/app/products/productItems/items/items.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ProdshopmodService } from '../../prodshopmod.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { IProductTypes } from 'app/prodsharemod/models/IProductTypes';\nimport { IBrands } from 'app/prodsharemod/models/IBrands';\n\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.scss']\n})\nexport class ItemsComponent {\n\n\n  errors : string[] | null = null;\n  brands:IBrands[]=[];\n  types:IProductTypes[]=[];\n  prodName: string[]=[];\n  prodBrand: string[]=[];\n  prodType: string[]=[];\n  prodPictureUrl : string = \"\";\n  formdata : FormData = null;\n\n  constructor(private formbuilder:FormBuilder,\n    private productsService : ProdshopmodService,\n    private toastr : ToastrService,\n    private matdialog : MatDialog,\n    private prodshopmodService: ProdshopmodService){\n  }\n\n  productForm = this.formbuilder.group({\n    prodName: ['',Validators.required],\n    prodPicture: ['',Validators.required],\n    prodDescription: ['',Validators.required],\n    prodPrice: ['',Validators.required],\n    productBrandId: ['',Validators.required],\n    productTypeId: ['',Validators.required], \n});\n\nngOnInit(): void {\n  this.GetProductBrands();\n  this.GetProductTypes();\n  this.GetProducts();\n}\n\nonSubmit(){\n \n  this.productsService.saveProductPicture(this.formdata).subscribe({\n    next: ()=>{\n       this.toastr.success(\"Picture saved\");\n       this.sendData();\n    },\n    error : error => { \n      this.toastr.success(\"Picture not saved\");\n      this.errors = error.errors  } \n    \n  });\n   \n}\n\nsendData(){\n  const findName = this.prodName.find(x=>x.toLowerCase() === \n  this.productForm?.get('prodName')?.value.toLowerCase());\n\n  const  findPrice = this.prodType.find(x=>x === \n    this.productForm?.get('prodPrice')?.value);\n\n  if(findName  && findPrice)\n  {\n    this.toastr.success(\"Product already exist\");\n  }\n  else{\n  this.productsService.UploadProduct(this.productForm.value).subscribe({\n  next: ()=>{\n    window.location.reload();\n     this.toastr.success(\"Product uploaded\");\n  },\n  error : error => { \n    this.toastr.success(\"Not uploaded\");\n    this.errors = error.errors  }  \n});\n}\n}\n\ncloseDialog(){\n  this.matdialog.closeAll(); // <- Close the mat dialog\n}\n\nGetProducts(){\n  this.prodshopmodService.getProducts().subscribe({\n     next: response=>{\n      for(let x of response.data){\n       this.prodName.push(x.prodName);\n       this.prodBrand.push(x.productBrand); \n       this.prodType.push(x.productType); \n      }},\n  error: error => console.log(error)\n})}\n\nGetProductBrands(){\n  this.prodshopmodService.getBrands().subscribe({\n    next: brands=>{ \n          this.brands = brands         \n    },\n    error:error=>console.log(error)         \n});\n}\n\nGetProductTypes(){\n  this.prodshopmodService.getProductTypes().subscribe({\n    next: types=>{ \n        this.types = types\n      },\n      error:error=>console.log(error)   \n});\n} \n\nuploadPicture(e){\n\n    if(e.target.files.length>0){      \n       const file = e.target.files[0];\n       var formData = new FormData();\n       formData.append('myFiles',file);\n      this.formdata = formData;\n      \n  }}}\n\n","<div style=\"background-color: lightgray; padding-bottom: 40px;border:5px solid skyblue ;\">\n    <div class=\"align-content-left\">\n        <button (click)=\"closeDialog()\" style=\"margin-top: 15px;margin-left: 5px;\"\n    class=\" btn btn-danger\">\n        x    \n    </button>\n   \n        </div>\n        <div class=\"text-center\" style=\"color:blue ;\"> <h1>Product Upload Page</h1></div>\n       \n    <div class=\"d-flex justify-content-center\">\n    \n        <div class=\"col-3\">\n    \n            <form [formGroup] = \"productForm\" (ngSubmit)=\"onSubmit()\">\n    \n                <div class=\"text-center mt-5\">\n                  \n                  <app-text-inputs [formControl]=\"productForm.controls['prodName']\"  [label]=\"'Product Name'\"></app-text-inputs>\n    \n                  <app-text-inputs [formControl]=\" productForm.controls['prodPicture']\"  \n                 [type]=\"'file'\" (change)=\"uploadPicture($event)\" [label]=\"'Product Picture'\"></app-text-inputs>\n    \n                  <app-text-inputs [formControl]=\" productForm.controls['prodDescription']\"  [label]=\"'Product Description'\"></app-text-inputs>\n    \n                  <app-text-inputs [formControl]=\" productForm.controls['prodPrice']\" [type]=\"'number'\"  [label]=\"'Price'\"></app-text-inputs>\n                  <div class=\"row\">\n                  <div class=\"col-6\">\n                   <strong style=\"font-weight:bolder ;\"> Brand</strong>\n                  <div class=\"d-flex\" *ngFor=\"let brand of brands\" [formGroup]=\" productForm\">\n                    <input \n                    formControlName=\"productBrandId\"\n                    id=\"{{brand.id}}\"\n                    value=\"{{brand.id}}\"\n                    name=\"productBrandId\"\n                    type=\"radio\">\n                    <label for={{brand.id}}>{{brand.name}}</label>\n                  </div>\n                </div>\n            \n                <div class=\"col-6\">\n                    <strong style=\"font-weight:bolder ;\">Type</strong>\n                   <div class=\"d-flex\" *ngFor=\"let type of types\" [formGroup]=\" productForm\">\n                    <input \n                    formControlName=\"productTypeId\"\n                    id=\"{{type.id}}\"\n                    value=\"{{type.id}}\"\n                    name=\"productTypeId\"\n                    type=\"radio\">\n                         <label for={{type.id}}>{{type.name}}</label>\n                   </div>\n                 </div>\n                </div>\n                </div>\n                <div>\n                <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n                        <li *ngIf=\"let error of errors\">\n                                {{error}}\n                        </li>\n                </ul>\n            </div>\n\n            <br>\n                <div class=\"d-grid\" >\n                    <button [disabled]=\"productForm.invalid\" class=\"btn btn-lg btn-success\" type=\"submit\" style=\"margin-top:10px ;\">\n                      Upload Product\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    </div>\n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}