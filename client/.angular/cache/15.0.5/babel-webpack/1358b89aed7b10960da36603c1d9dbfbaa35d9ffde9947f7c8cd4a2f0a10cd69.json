{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"../orders.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../Account/text-inputs/text-inputs.component\";\nfunction AddDeliveryComponent_ul_16_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r2, \" \");\n  }\n}\nfunction AddDeliveryComponent_ul_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 12);\n    i0.ɵɵtemplate(1, AddDeliveryComponent_ul_16_li_1_Template, 2, 1, \"li\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIfOf\", ctx_r0.errors);\n  }\n}\nexport class AddDeliveryComponent {\n  constructor(formbuilder, matdialog, toastr, http, oderService) {\n    this.formbuilder = formbuilder;\n    this.matdialog = matdialog;\n    this.toastr = toastr;\n    this.http = http;\n    this.oderService = oderService;\n    this.errors = null;\n    this.deliveries = [];\n    this.delForm = this.formbuilder.group({\n      delName: ['', Validators.required],\n      delTime: ['', Validators.required],\n      delDescription: ['', Validators.required],\n      delPrice: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.GetDelivery();\n  }\n  onSubmit() {\n    const find = this.deliveries.find(x => x == this.delForm?.get('delTime')?.value);\n    console.log(find);\n    if (find) {\n      this.toastr.success(\"Delivery already exist\");\n      return;\n    }\n    this.oderService.AddDelivery(this.delForm.value).subscribe({\n      next: delivery => {\n        if (delivery == true) {\n          this.closeDialog();\n          window.location.reload();\n          return this.toastr.success(\"Delivery Added\");\n        }\n        return this.toastr.success(\"Delivery not added\");\n      },\n      error: error => {\n        this.toastr.success(\"Check your server\");\n        this.errors = error.errors;\n      }\n    });\n  }\n  closeDialog() {\n    this.matdialog.closeAll(); // <- Close the mat dialog\n  }\n\n  GetDelivery() {\n    this.oderService.getDelivery().subscribe({\n      next: delivery => {\n        for (let x of delivery) {\n          this.deliveries.push(x.delTime.substring(0, 1));\n        }\n      },\n      error: error => console.log(error)\n    });\n  }\n}\nAddDeliveryComponent.ɵfac = function AddDeliveryComponent_Factory(t) {\n  return new (t || AddDeliveryComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.OrdersService));\n};\nAddDeliveryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddDeliveryComponent,\n  selectors: [[\"app-add-delivery\"]],\n  decls: 21,\n  vars: 11,\n  consts: [[2, \"background-color\", \"lightgray\", \"padding-bottom\", \"40px\", \"border\", \"5px solid skyblue\"], [1, \"align-content-left\"], [1, \"btn\", \"btn-danger\", 2, \"margin-top\", \"15px\", \"margin-left\", \"5px\", 3, \"click\"], [1, \"text-center\", 2, \"color\", \"blue\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"col-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mt-5\"], [3, \"formControl\", \"label\"], [\"class\", \"text-danger list-unstyled\", 4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-success\", 2, \"margin-top\", \"10px\", 3, \"disabled\"], [1, \"text-danger\", \"list-unstyled\"], [4, \"ngIf\", \"ngIfOf\"]],\n  template: function AddDeliveryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AddDeliveryComponent_Template_button_click_2_listener() {\n        return ctx.closeDialog();\n      });\n      i0.ɵɵtext(3, \" x \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h1\");\n      i0.ɵɵtext(6, \"Add new delivery\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AddDeliveryComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"app-text-inputs\", 8)(12, \"app-text-inputs\", 8)(13, \"app-text-inputs\", 8)(14, \"app-text-inputs\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\");\n      i0.ɵɵtemplate(16, AddDeliveryComponent_ul_16_Template, 2, 1, \"ul\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"div\", 10)(19, \"button\", 11);\n      i0.ɵɵtext(20, \" Add \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.delForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.delForm.controls[\"delName\"])(\"label\", \"Name of delivery\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.delForm.controls[\"delTime\"])(\"label\", \"Time(days)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.delForm.controls[\"delDescription\"])(\"label\", \"Describe delivery\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.delForm.controls[\"delPrice\"])(\"label\", \"Price\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.delForm.invalid);\n    }\n  },\n  dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i7.TextInputsComponent]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}