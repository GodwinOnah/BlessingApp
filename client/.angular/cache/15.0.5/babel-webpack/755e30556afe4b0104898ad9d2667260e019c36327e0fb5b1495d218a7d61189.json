{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction TextInputsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n}\nfunction TextInputsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Please enter your \", ctx_r1.label, \" \");\n  }\n}\nfunction TextInputsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Use a valid email address. E.g godwin@gmail.com \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TextInputsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Try complex password. E.g Abc123@@ \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TextInputsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Sorry!! This email is already taken! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TextInputsComponent {\n  constructor(controlDirectory) {\n    this.controlDirectory = controlDirectory;\n    this.label = '';\n    this.type = 'text';\n    this.controlDirectory.valueAccessor = this;\n  }\n  writeValue(obj) {}\n  registerOnChange(fn) {}\n  registerOnTouched(fn) {}\n  get control() {\n    return this.controlDirectory.control;\n  }\n}\nTextInputsComponent.ɵfac = function TextInputsComponent_Factory(t) {\n  return new (t || TextInputsComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2));\n};\nTextInputsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TextInputsComponent,\n  selectors: [[\"app-text-inputs\"]],\n  inputs: {\n    label: \"label\",\n    type: \"type\"\n  },\n  decls: 9,\n  vars: 10,\n  consts: [[1, \"form-floating\", \"mb-3\"], [1, \"form-control\", 2, \"width\", \"120%\", 3, \"type\", \"placeholder\", \"formControl\", \"ngClass\"], [\"class\", \"fa fa-spinner fa-spin loader\", 4, \"ngIf\"], [\"for\", \"floatingInput\"], [\"class\", \"invalid-feedback\", \"style\", \"font-weight:bolder;\", 4, \"ngIf\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\", \"loader\"], [1, \"invalid-feedback\", 2, \"font-weight\", \"bolder\"]],\n  template: function TextInputsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵtemplate(2, TextInputsComponent_div_2_Template, 1, 0, \"div\", 2);\n      i0.ɵɵelementStart(3, \"label\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, TextInputsComponent_div_5_Template, 2, 1, \"div\", 4);\n      i0.ɵɵtemplate(6, TextInputsComponent_div_6_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(7, TextInputsComponent_div_7_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(8, TextInputsComponent_div_8_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.type);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.label);\n      i0.ɵɵproperty(\"formControl\", ctx.control)(\"ngClass\", ctx.control.touched ? ctx.control.invalid ? \"is-invalid\" : \"is-valid\" : null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.status === \"PENDING\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"required\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"email\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"pattern\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"emailExists\"]);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective],\n  styles: [\".loader[_ngcontent-%COMP%] {\\n  position: absolute;\\n  width: auto;\\n  top: 20px;\\n  right: 20px;\\n  margin-top: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQWNjb3VudC90ZXh0LWlucHV0cy90ZXh0LWlucHV0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmxvYWRlcntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgdG9wOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDA7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAUQA,yBAEM;;;;;IAINA,8BACyD;IACzDA,YACA;IAAAA,iBAAM;;;;IADNA,eACA;IADAA,+DACA;;;;;IAEAA,8BACyD;IACzDA,iEACA;IAAAA,iBAAM;;;;;IAENA,8BACyD;IACzDA,oDACA;IAAAA,iBAAM;;;;;IAENA,8BACyD;IACzDA,sDACA;IAAAA,iBAAM;;;AC1Bd,OAAM,MAAOC,mBAAmB;EAI9BC,YAA2BC,gBAA2B;IAA3B,qBAAgB,GAAhBA,gBAAgB;IAHlC,UAAK,GAAC,EAAE;IACR,SAAI,GAAC,MAAM;IAIlB,IAAI,CAACA,gBAAgB,CAACC,aAAa,GAAG,IAAI;EAE5C;EAEAC,UAAU,CAACC,GAAQ,GAEnB;EACAC,gBAAgB,CAACC,EAAO,GAExB;EACAC,iBAAiB,CAACD,EAAO,GAEzB;EAEA,IAAIE,OAAO;IACT,OAAO,IAAI,CAACP,gBAAgB,CAACO,OAAsB;EACrD;;AAtBWT,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAU;EAAAC;IAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRhClB,8BAAkC;MAC1BA,2BAOqB;MAErBA,oEAEM;MAENA,gCAA6B;MAAAA,YAAS;MAAAA,iBAAQ;MAE9CA,oEAGM;MAENA,oEAGM;MAENA,oEAGM;MAENA,oEAGM;MACdA,iBAAM;;;MAjCEA,eAAe;MAAfA,0CAAe;MACfA,kDAAyB;MACzBA,yCAAyB;MAMnBA,eAAoC;MAApCA,uDAAoC;MAIbA,eAAS;MAATA,+BAAS;MAEhCA,eAAoC;MAApCA,yFAAoC;MAKpCA,eAAiC;MAAjCA,sFAAiC;MAKjCA,eAAmC;MAAnCA,wFAAmC;MAKnCA,eAAuC;MAAvCA,4FAAuC","names":["i0","TextInputsComponent","constructor","controlDirectory","valueAccessor","writeValue","obj","registerOnChange","fn","registerOnTouched","control","selectors","inputs","label","type","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/godwinonah/Documents/TheBags/client/src/app/Account/text-inputs/text-inputs.component.html","/Users/godwinonah/Documents/TheBags/client/src/app/Account/text-inputs/text-inputs.component.ts"],"sourcesContent":["<div class = \"form-floating mb-3\">\n        <input \n        type = {{type}}\n        placeholder = \"{{label}}\"\n        [formControl] = \"control\"\n        [ngClass] = \"(control.touched) ? \n        control.invalid ? 'is-invalid':'is-valid':null\"\n        class = \"form-control\"\n        style=\"width:120% ;\">\n\n        <div *ngIf = \"control.status === 'PENDING'\" \n        class = \"fa fa-spinner fa-spin loader\">\n        </div>\n\n        <label for = \"floatingInput\">{{label}}</label> \n\n        <div *ngIf = \"control.errors?.['required']\" \n        class = \"invalid-feedback\" style = \"font-weight:bolder;\">\n        Please enter your {{label}}\n        </div>\n\n        <div *ngIf = \"control.errors?.['email']\" \n        class = \"invalid-feedback\" style = \"font-weight:bolder;\">\n        Use a valid email address. E.g godwin@gmail.com\n        </div>\n\n        <div *ngIf = \"control.errors?.['pattern']\" \n        class = \"invalid-feedback\" style = \"font-weight:bolder;\">\n        Try complex password. E.g Abc123@@\n        </div>\n\n        <div *ngIf = \"control.errors?.['emailExists']\" \n        class = \"invalid-feedback\" style = \"font-weight:bolder;\">\n        Sorry!! This email is already taken!\n        </div>\n</div>","import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-inputs',\n  templateUrl: './text-inputs.component.html',\n  styleUrls: ['./text-inputs.component.scss']\n})\nexport class TextInputsComponent implements ControlValueAccessor{\n  @Input() label='';\n  @Input() type='text';\n\n  constructor(@Self() public controlDirectory: NgControl){\n\n    this.controlDirectory.valueAccessor = this;\n\n  }\n\n  writeValue(obj: any): void {\n   \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n   \n  }\n\n  get control():FormControl{\n    return this.controlDirectory.control as FormControl;\n  }\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}