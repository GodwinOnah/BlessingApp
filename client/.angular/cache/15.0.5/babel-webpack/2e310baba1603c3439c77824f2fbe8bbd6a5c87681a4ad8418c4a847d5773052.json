{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"../orders.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../Account/text-inputs/text-inputs.component\";\nfunction AddDeliveryComponent_ul_16_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r2, \" \");\n  }\n}\nfunction AddDeliveryComponent_ul_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 12);\n    i0.ɵɵtemplate(1, AddDeliveryComponent_ul_16_li_1_Template, 2, 1, \"li\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIfOf\", ctx_r0.errors);\n  }\n}\nexport class AddDeliveryComponent {\n  constructor(formbuilder, matdialog, toastr, http, oderService) {\n    this.formbuilder = formbuilder;\n    this.matdialog = matdialog;\n    this.toastr = toastr;\n    this.http = http;\n    this.oderService = oderService;\n    this.errors = null;\n    this.deliveries = [];\n    this.delForm = this.formbuilder.group({\n      delName: ['', Validators.required],\n      delTime: ['', Validators.required],\n      delDescription: ['', Validators.required],\n      delPrice: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.GetDelivery();\n  }\n  onSubmit() {\n    const find = this.deliveries.find(x => x == this.delForm?.get('delTime')?.value);\n    console.log(find);\n    if (find) {\n      this.toastr.success(\"Delivery already exist\");\n      return;\n    }\n    this.oderService.AddDelivery(this.delForm.value).subscribe({\n      next: delivery => {\n        if (delivery == true) {\n          this.closeDialog();\n          window.location.reload();\n          return this.toastr.success(\"Delivery Added\");\n        }\n        return this.toastr.success(\"Delivery not added\");\n      },\n      error: error => {\n        this.toastr.success(\"Check your server\");\n        this.errors = error.errors;\n      }\n    });\n  }\n  closeDialog() {\n    this.matdialog.closeAll(); // <- Close the mat dialog\n  }\n\n  GetDelivery() {\n    this.oderService.getDelivery().subscribe({\n      next: delivery => {\n        for (let x of delivery) {\n          this.deliveries.push(x.delTime.substring(0, 1));\n        }\n      },\n      error: error => console.log(error)\n    });\n  }\n}\nAddDeliveryComponent.ɵfac = function AddDeliveryComponent_Factory(t) {\n  return new (t || AddDeliveryComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.OrdersService));\n};\nAddDeliveryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddDeliveryComponent,\n  selectors: [[\"app-add-delivery\"]],\n  decls: 21,\n  vars: 11,\n  consts: [[2, \"background-color\", \"lightgray\", \"padding-bottom\", \"40px\", \"border\", \"5px solid skyblue\"], [1, \"align-content-left\"], [1, \"btn\", \"btn-danger\", 2, \"margin-top\", \"15px\", \"margin-left\", \"5px\", 3, \"click\"], [1, \"text-center\", 2, \"color\", \"blue\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"col-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mt-5\"], [3, \"formControl\", \"label\"], [\"class\", \"text-danger list-unstyled\", 4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-success\", 2, \"margin-top\", \"10px\", 3, \"disabled\"], [1, \"text-danger\", \"list-unstyled\"], [4, \"ngIf\", \"ngIfOf\"]],\n  template: function AddDeliveryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AddDeliveryComponent_Template_button_click_2_listener() {\n        return ctx.closeDialog();\n      });\n      i0.ɵɵtext(3, \" x \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h1\");\n      i0.ɵɵtext(6, \"Add new delivery\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AddDeliveryComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"app-text-inputs\", 8)(12, \"app-text-inputs\", 8)(13, \"app-text-inputs\", 8)(14, \"app-text-inputs\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\");\n      i0.ɵɵtemplate(16, AddDeliveryComponent_ul_16_Template, 2, 1, \"ul\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"div\", 10)(19, \"button\", 11);\n      i0.ɵɵtext(20, \" Add \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.delForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.delForm.controls[\"delName\"])(\"label\", \"Name of delivery\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.delForm.controls[\"delTime\"])(\"label\", \"Time(days)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.delForm.controls[\"delDescription\"])(\"label\", \"Describe delivery\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.delForm.controls[\"delPrice\"])(\"label\", \"Price\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.delForm.invalid);\n    }\n  },\n  dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i7.TextInputsComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddDeliveryComponent","constructor","formbuilder","matdialog","toastr","http","oderService","group","delName","required","delTime","delDescription","delPrice","ngOnInit","GetDelivery","onSubmit","find","deliveries","x","delForm","get","value","console","log","success","AddDelivery","subscribe","next","delivery","closeDialog","window","location","reload","error","errors","closeAll","getDelivery","push","substring","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/godwinonah/Documents/BagShop-Client-App/client/src/app/orders/add-delivery/add-delivery.component.ts","/Users/godwinonah/Documents/BagShop-Client-App/client/src/app/orders/add-delivery/add-delivery.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-add-delivery',\n  templateUrl: './add-delivery.component.html',\n  styleUrls: ['./add-delivery.component.scss']\n})\nexport class AddDeliveryComponent {\n  errors : string[] | null = null;\n  deliveries : string[] =[];\n \n  constructor(\n    private formbuilder:FormBuilder,\n    private matdialog : MatDialog,\n    private toastr : ToastrService,   \n    private http : HttpClient,\n    private oderService : OrdersService){\n  }\n\n  delForm = this.formbuilder.group({\n    delName: ['',Validators.required],\n    delTime: ['',Validators.required],\n    delDescription: ['',Validators.required],\n   delPrice: ['',Validators.required]\n});\n\nngOnInit(): void {\n  this.GetDelivery()\n}\n\nonSubmit(){\n  const find = this.deliveries.find(x=>x ==\n  this.delForm?.get('delTime')?.value);\n  console.log(find)\n  if(find)\n  {  \n    this.toastr.success(\"Delivery already exist\"); \n   return;\n}\n\n  this.oderService.AddDelivery(this.delForm.value).subscribe({\n    next: delivery=>{\n      if(delivery==true)\n      {\n      this.closeDialog();\n      window.location.reload();\n      return this.toastr.success(\"Delivery Added\");\n      \n     \n      }\n      return this.toastr.success(\"Delivery not added\");\n    },\n    error : error => { \n      this.toastr.success(\"Check your server\");\n      this.errors = error.errors  }   \n  });  \n}\n\ncloseDialog(){\n  this.matdialog.closeAll(); // <- Close the mat dialog\n}\n\nGetDelivery(){\n  this.oderService.getDelivery().subscribe({\n    next: delivery=>{ \n      for(let x of delivery){\n        this.deliveries.push(x.delTime.substring(0,1));\n  }\n    \n    },\n    error:error=>console.log(error)         \n});\n}\n}\n","<div style=\"background-color: lightgray; padding-bottom: 40px;border:5px solid skyblue ;\">\n    <div class=\"align-content-left\">\n        <button (click)=\"closeDialog()\" style=\"margin-top: 15px;margin-left: 5px;\"\n    class=\" btn btn-danger\">\n        x    \n    </button>\n   \n        </div>\n        <div class=\"text-center\" style=\"color:blue ;\"> <h1>Add new delivery</h1></div>\n       \n    <div class=\"d-flex justify-content-center\">\n    \n        <div class=\"col-3\">\n    \n            <form [formGroup] = \"delForm\" (ngSubmit)=\"onSubmit()\">\n    \n                <div class=\"text-center mt-5\">\n                  \n                  <app-text-inputs [formControl]=\"delForm.controls['delName']\"  [label]=\"'Name of delivery'\"></app-text-inputs>\n\n                  <app-text-inputs [formControl]=\"delForm.controls['delTime']\"  [label]=\"'Time(days)'\"></app-text-inputs>\n\n                  <app-text-inputs [formControl]=\" delForm.controls['delDescription']\"  [label]=\"'Describe delivery'\"></app-text-inputs>\n    \n                  <app-text-inputs [formControl]=\" delForm.controls['delPrice']\"  [label]=\"'Price'\"></app-text-inputs>\n                </div>\n                <div>\n                <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n                        <li *ngIf=\"let error of errors\">\n                                {{error}}\n                        </li>\n                </ul>\n            </div>\n\n            <br>\n                <div class=\"d-grid\" >\n                    <button [disabled]=\"delForm.invalid\" class=\"btn btn-lg btn-success\" type=\"submit\" style=\"margin-top:10px ;\">\n                      Add\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    </div>\n    \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}