{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrdersService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.orderSource = new BehaviorSubject(null);\n    this.orders$ = this.orderSource.asObservable();\n  }\n  GetOrders() {\n    const token = localStorage.getItem('token');\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', `Bearer ${token}`);\n    return this.http.get(this.baseUrl + 'order', {\n      headers\n    });\n  }\n  GetAdminOrders() {\n    return this.http.get(this.baseUrl + 'admin');\n  }\n  getDelivery() {\n    return this.http.get(this.baseUrl + 'order/delivery');\n  }\n  GetOrdersById(id) {\n    const token = localStorage.getItem('token');\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', `Bearer ${token}`);\n    return this.http.get(this.baseUrl + 'order/' + id, {\n      headers\n    });\n  }\n  GetAdminOrdersById(id) {\n    return this.http.get(this.baseUrl + 'admin/' + id);\n  }\n  DeleteAdminOrder(id) {\n    return this.http.delete(this.baseUrl + 'admin/' + id);\n  }\n  UpdateOrderConfirmation(details) {\n    return this.http.put(this.baseUrl + 'order', details);\n  }\n  UpdateAdminOrderConfirmation(details) {\n    return this.http.put(this.baseUrl + 'admin', details);\n  }\n  AddDelivery(value) {\n    return this.http.post(this.baseUrl + 'order/delivery', value);\n  }\n  deleteDelivery(id) {\n    return this.http.delete(this.baseUrl + 'order/' + id);\n  }\n}\nOrdersService.ɵfac = function OrdersService_Factory(t) {\n  return new (t || OrdersService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrdersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrdersService,\n  factory: OrdersService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}