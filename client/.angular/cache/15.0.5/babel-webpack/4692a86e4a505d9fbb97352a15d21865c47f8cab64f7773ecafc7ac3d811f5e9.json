{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { debounceTime, finalize, map, switchMap, take } from 'rxjs';\nimport { LoginComponent } from '../login/login.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../account.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../text-inputs/text-inputs.component\";\nfunction RegisterComponent_ul_30_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r2, \" \");\n  }\n}\nfunction RegisterComponent_ul_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 16);\n    i0.ɵɵtemplate(1, RegisterComponent_ul_30_li_1_Template, 2, 1, \"li\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIfOf\", ctx_r0.errors);\n  }\n}\nexport class RegisterComponent {\n  constructor(formbuilder, accountService, router, toastr, matDialog) {\n    this.formbuilder = formbuilder;\n    this.accountService = accountService;\n    this.router = router;\n    this.toastr = toastr;\n    this.matDialog = matDialog;\n    this.errors = null;\n    this.view1 = true;\n    this.changetype1 = true;\n    this.view2 = true;\n    this.changetype2 = true;\n    this.RegularExpression = \"^(?=(.*[a-z]){1,})(?=(.*[\\\\d]){1,})(?=(.*[\\\\W]){1,})(?!.*\\\\s).{7,30}$\";\n    this.registerForm = this.formbuilder.group({\n      NickName: ['', Validators.required],\n      FirstName: ['', Validators.required],\n      MiddleName: [''],\n      LastName: ['', Validators.required],\n      Street: ['', Validators.required],\n      City: ['', Validators.required],\n      Country: ['', Validators.required],\n      Zipcode: ['', Validators.required],\n      Phone: ['', Validators.required],\n      Email: ['', [Validators.required, Validators.email], [this.validateEmail()]],\n      Password1: ['', [Validators.required, Validators.pattern(this.RegularExpression)]],\n      Password2: ['', [Validators.required, Validators.pattern(this.RegularExpression)]]\n      // ConfirmPassword: ['',[Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    // console.log(this.registerForm.value)\n    this.accountService.Register(this.registerForm.value).subscribe({\n      next: () => {\n        this.closeDialog();\n        this.toastr.success(\"Registered succecssfully\");\n        this.openLoginDialog();\n      },\n      error: error => {\n        this.toastr.success(\"Not Registered; Check if password are matched\");\n        this.errors = error.errors;\n      }\n    });\n  }\n  validateEmail() {\n    return control => {\n      return control.valueChanges.pipe(debounceTime(1000), take(1), switchMap(() => {\n        return this.accountService.CheckEmail(control.value).pipe(map(result => result ? {\n          emailExists: true\n        } : null), finalize(() => control.markAsTouched()));\n      }));\n    };\n  }\n  openLoginDialog() {\n    this.matDialog.open(LoginComponent, {\n      height: '50%',\n      width: '80%'\n    });\n  }\n  closeDialog() {\n    this.accountService.closeDialog(); // <- Close the mat dialog\n  }\n\n  viewpass1() {\n    this.view1 = !this.view1;\n    this.changetype1 = !this.changetype1;\n  }\n  viewpass2() {\n    this.view2 = !this.view2;\n    this.changetype2 = !this.changetype2;\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserAccountService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.MatDialog));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 34,\n  vars: 32,\n  consts: [[1, \"register\"], [1, \"align-content-left\"], [\"mat-dialog-close\", \"\", 1, \"btn\", \"btn-danger\", 2, \"margin-top\", \"15px\", \"margin-left\", \"5px\"], [1, \"text-center\", 2, \"color\", \"blue\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"col-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mt-5\"], [3, \"formControl\", \"label\"], [3, \"formControl\", \"label\", \"type\"], [1, \"form-group\"], [1, \"eyeicon\", 3, \"click\"], [3, \"ngClass\"], [\"class\", \"text-danger list-unstyled\", 4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-success\", 2, \"margin-top\", \"10px\", 3, \"disabled\"], [1, \"text-danger\", \"list-unstyled\"], [4, \"ngIf\", \"ngIfOf\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵtext(3, \" x \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h1\");\n      i0.ɵɵtext(6, \"SignUp\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"app-text-inputs\", 8)(12, \"app-text-inputs\", 8)(13, \"app-text-inputs\", 8)(14, \"app-text-inputs\", 8)(15, \"app-text-inputs\", 8)(16, \"app-text-inputs\", 8)(17, \"app-text-inputs\", 8)(18, \"app-text-inputs\", 8)(19, \"app-text-inputs\", 8)(20, \"app-text-inputs\", 9);\n      i0.ɵɵelementStart(21, \"div\", 10);\n      i0.ɵɵelement(22, \"app-text-inputs\", 9);\n      i0.ɵɵelementStart(23, \"span\", 11);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_span_click_23_listener() {\n        return ctx.viewpass1();\n      });\n      i0.ɵɵelement(24, \"i\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 10);\n      i0.ɵɵelement(26, \"app-text-inputs\", 9);\n      i0.ɵɵelementStart(27, \"span\", 11);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_span_click_27_listener() {\n        return ctx.viewpass2();\n      });\n      i0.ɵɵelement(28, \"i\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\");\n      i0.ɵɵtemplate(30, RegisterComponent_ul_30_Template, 2, 1, \"ul\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 14)(32, \"button\", 15);\n      i0.ɵɵtext(33, \" Register \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"NickName\"])(\"label\", \"Nickname\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"FirstName\"])(\"label\", \"Firstname\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"MiddleName\"])(\"label\", \"Middlename (optional)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"LastName\"])(\"label\", \"Lastname\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"Street\"])(\"label\", \"Street\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"City\"])(\"label\", \"City\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"Country\"])(\"label\", \"Country\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"Zipcode\"])(\"label\", \"Zipcode\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"Phone\"])(\"label\", \"Phone\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"Email\"])(\"label\", \"Email Address\")(\"type\", \"email\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"Password1\"])(\"label\", \"Password\")(\"type\", ctx.changetype1 ? \"password\" : \"text\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.view1 ? \"fa fa-eye\" : \"fa fa-eye-slash\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.registerForm.controls[\"Password2\"])(\"label\", \"Confirm Password\")(\"type\", ctx.changetype2 ? \"password\" : \"text\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.view2 ? \"fa fa-eye\" : \"fa fa-eye-slash\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n    }\n  },\n  dependencies: [i6.NgClass, i6.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i7.TextInputsComponent, i5.MatDialogClose],\n  styles: [\".form-group[_ngcontent-%COMP%] {\\n  position: relative;\\n  width: 100%;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   app-text-inputs[_ngcontent-%COMP%] {\\n  padding-right: 35px;\\n}\\n\\n.eyeicon[_ngcontent-%COMP%] {\\n  position: absolute;\\n  right: -1px;\\n  top: 13px;\\n  padding: 8px;\\n  margin-left: 5px;\\n}\\n\\n.register[_ngcontent-%COMP%] {\\n  background-color: lightgray;\\n  border: 3px solid black;\\n  width: 100%;\\n  height: 230%;\\n}\\n\\n@media (max-width: 679px) {\\n  .register[_ngcontent-%COMP%] {\\n    background-color: lightgray;\\n    border: 3px solid black;\\n    width: 100%;\\n    height: 150%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQWNjb3VudC9SZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUVBO0VBQ0ksbUJBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFNBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLDJCQUFBO0VBQ0EsdUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVBO0VBQ0k7SUFDSSwyQkFBQTtJQUNBLHVCQUFBO0lBQ0EsV0FBQTtJQUNBLFlBQUE7RUFDTjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tZ3JvdXB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4uZm9ybS1ncm91cCBhcHAtdGV4dC1pbnB1dHN7XG4gICAgcGFkZGluZy1yaWdodDogMzVweDtcbn1cblxuLmV5ZWljb257XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtMXB4O1xuICAgIHRvcDogMTNweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbn1cblxuLnJlZ2lzdGVye1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTsgXG4gICAgYm9yZGVyOjNweCBzb2xpZCBibGFjayA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMzAlO1xufVxuXG5AbWVkaWEobWF4LXdpZHRoOiA2NzlweCkge1xuICAgIC5yZWdpc3RlcntcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5OyBcbiAgICAgICAgYm9yZGVyOjNweCBzb2xpZCBibGFjayA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDE1MCU7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","debounceTime","finalize","map","switchMap","take","LoginComponent","i0","RegisterComponent","constructor","formbuilder","accountService","router","toastr","matDialog","group","NickName","required","FirstName","MiddleName","LastName","Street","City","Country","Zipcode","Phone","Email","email","validateEmail","Password1","pattern","RegularExpression","Password2","onSubmit","Register","registerForm","value","subscribe","next","closeDialog","success","openLoginDialog","error","errors","control","valueChanges","pipe","CheckEmail","result","emailExists","markAsTouched","open","height","width","viewpass1","view1","changetype1","viewpass2","view2","changetype2","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/godwinonah/Documents/BagShop-Client-App/client/src/app/Account/Register/register.component.ts","/Users/godwinonah/Documents/BagShop-Client-App/client/src/app/Account/Register/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder,AsyncValidatorFn,Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { debounceTime, finalize, map, switchMap, take } from 'rxjs';\nimport { UserAccountService } from '../account.service';\nimport {  MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from '../login/login.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  errors : string[] | null = null;\n  view1 : boolean = true;\n  changetype1 : boolean = true;\n  view2: boolean = true;\n  changetype2 : boolean = true;\n\n  RegularExpression=\"^(?=(.*[a-z]){1,})(?=(.*[\\\\d]){1,})(?=(.*[\\\\W]){1,})(?!.*\\\\s).{7,30}$\";\n\n  constructor(private formbuilder:FormBuilder, \n  private accountService:UserAccountService, \n  private router : Router,\n  private toastr : ToastrService,\n  private matDialog :MatDialog){\n  }\n  registerForm = this.formbuilder.group({\n          NickName: ['',Validators.required],\n          FirstName: ['',Validators.required],\n          MiddleName: [''],\n          LastName: ['',Validators.required],\n          Street: ['',Validators.required],\n          City: ['',Validators.required],\n          Country: ['',Validators.required],\n          Zipcode: ['',Validators.required],\n          Phone: ['',Validators.required],\n          Email: ['',[Validators.required, Validators.email],[this.validateEmail()]],\n          Password1: ['',[Validators.required,Validators.pattern(this.RegularExpression)]],\n          Password2: ['',[Validators.required,Validators.pattern(this.RegularExpression)]],\n          // ConfirmPassword: ['',[Validators.required]]\n  });\n\n  onSubmit(){\n    // console.log(this.registerForm.value)\n    this.accountService.Register(this.registerForm.value).subscribe({\n      next: ()=>{\n        this. closeDialog();\n         this.toastr.success(\"Registered succecssfully\");\n         this.openLoginDialog()},\n      error : error => { \n        this.toastr.success(\"Not Registered; Check if password are matched\");\n        this.errors = error.errors  } \n      \n    });\n  }\n\n  validateEmail() : AsyncValidatorFn {\n      return (control:AbstractControl)=>{\n        return(control.valueChanges.pipe(\n          debounceTime(1000),\n          take(1),\n          switchMap(()=>{\n            return this.accountService.CheckEmail(control.value)\n            .pipe(map(result=>result?{emailExists:true}:null),\n            finalize(()=>control.markAsTouched())\n         ) }\n    \n          )))}\n          \n        \n    }\n\n    openLoginDialog(){\n      this.matDialog.open(LoginComponent,\n        {height: '50%',\n      width: '80%'});\n      } \n\n      closeDialog(){\n        this.accountService.closeDialog(); // <- Close the mat dialog\n      }\n\n      viewpass1(){\n        this.view1 = !this.view1;\n        this.changetype1 = !this.changetype1;\n      }\n\n      viewpass2(){\n        this.view2 = !this.view2;\n        this.changetype2 = !this.changetype2;\n      }\n\n}\n","<div class=\"register\">\n<div class=\"align-content-left\">\n    <button style=\"margin-top: 15px;margin-left: 5px;\" class=\" btn btn-danger\" mat-dialog-close>\n        x\n    </button>\n    </div>\n    <div class=\"text-center\" style=\"color:blue ;\"> <h1>SignUp</h1></div>\n   \n<div class=\"d-flex justify-content-center\">\n\n    <div class=\"col-3\">\n\n        <form [formGroup] = \"registerForm\" (ngSubmit)=\"onSubmit()\">\n\n            <div class=\"text-center mt-5\">\n              \n              <app-text-inputs [formControl]=\" registerForm.controls['NickName']\"  [label]=\"'Nickname'\"></app-text-inputs>\n\n              <app-text-inputs [formControl]=\" registerForm.controls['FirstName']\"  [label]=\"'Firstname'\"></app-text-inputs>\n\n              <app-text-inputs [formControl]=\" registerForm.controls['MiddleName']\"  [label]=\"'Middlename (optional)'\"></app-text-inputs>\n\n              <app-text-inputs [formControl]=\" registerForm.controls['LastName']\"  [label]=\"'Lastname'\"></app-text-inputs>\n\n              <app-text-inputs [formControl]=\" registerForm.controls['Street']\"  [label]=\"'Street'\"></app-text-inputs>\n         \n              <app-text-inputs [formControl]=\" registerForm.controls['City']\"  [label]=\"'City'\"></app-text-inputs>\n            \n              <app-text-inputs [formControl]=\" registerForm.controls['Country']\"  [label]=\"'Country'\"></app-text-inputs>\n\n              <app-text-inputs [formControl]=\" registerForm.controls['Zipcode']\"  [label]=\"'Zipcode'\"></app-text-inputs>\n\n              <app-text-inputs [formControl]=\" registerForm.controls['Phone']\"  [label]=\"'Phone'\"></app-text-inputs>\n\n              <app-text-inputs [formControl]=\" registerForm.controls['Email']\"  [label]=\"'Email Address'\" [type]=\"'email'\"></app-text-inputs>\n                <div class=\"form-group\">\n              <app-text-inputs [formControl]=\" registerForm.controls['Password1']\"  [label]=\"'Password'\" [type]=\"changetype1?'password':'text'\"></app-text-inputs>\n              <span class=\"eyeicon\" (click)=\"viewpass1()\">\n                <i [ngClass]=\"view1?'fa fa-eye':'fa fa-eye-slash'\">\n                 </i>\n                </span>\n                </div>\n                <div class=\"form-group\">\n                    <app-text-inputs [formControl]=\" registerForm.controls['Password2']\"  [label]=\"'Confirm Password'\" [type]=\"changetype2?'password':'text'\"></app-text-inputs>\n                    <span class=\"eyeicon\" (click)=\"viewpass2()\">\n                      <i [ngClass]=\"view2?'fa fa-eye':'fa fa-eye-slash'\">\n                       </i>\n                      </span>\n                      </div>\n            </div>\n            <div>\n            <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n                    <li *ngIf=\"let error of errors\">\n                            {{error}}\n                    </li>\n            </ul>\n        </div>\n            <div class=\"d-grid\" >\n                <button [disabled]=\"registerForm.invalid\" class=\"btn btn-lg btn-success\" type=\"submit\" style=\"margin-top:10px ;\">\n                   Register\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}