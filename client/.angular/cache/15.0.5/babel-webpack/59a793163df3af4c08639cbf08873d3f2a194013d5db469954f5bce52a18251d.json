{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrdersService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.orderSource = new BehaviorSubject(null);\n    this.orders$ = this.orderSource.asObservable();\n  }\n  GetOrders() {\n    const token = localStorage.getItem('token');\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', `Bearer ${token}`);\n    return this.http.get(this.baseUrl + 'order', {\n      headers\n    });\n  }\n  GetAdminOrders() {\n    return this.http.get(this.baseUrl + 'admin');\n  }\n  getDelivery() {\n    return this.http.get(this.baseUrl + 'order/delivery');\n  }\n  GetOrdersById(id) {\n    const token = localStorage.getItem('token');\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', `Bearer ${token}`);\n    return this.http.get(this.baseUrl + 'order/' + id, {\n      headers\n    });\n  }\n  GetAdminOrdersById(id) {\n    return this.http.get(this.baseUrl + 'admin/' + id);\n  }\n  DeleteAdminOrder(id) {\n    return this.http.delete(this.baseUrl + 'admin/' + id);\n  }\n  UpdateOrderConfirmation(details) {\n    return this.http.put(this.baseUrl + 'order', details);\n  }\n  UpdateAdminOrderConfirmation(details) {\n    return this.http.put(this.baseUrl + 'admin', details);\n  }\n  AddDelivery(value) {\n    return this.http.post(this.baseUrl + 'order/delivery', value);\n  }\n  deleteDelivery(id) {\n    return this.http.delete(this.baseUrl + 'order/' + id);\n  }\n}\nOrdersService.ɵfac = function OrdersService_Factory(t) {\n  return new (t || OrdersService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrdersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrdersService,\n  factory: OrdersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,eAAe,QAAO,MAAM;;;AASrC,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAJxB,YAAO,GAAGJ,WAAW,CAACK,MAAM;IACpB,gBAAW,GAAG,IAAIJ,eAAe,CAAe,IAAI,CAAC;IAC7D,YAAO,GAAI,IAAI,CAACK,WAAW,CAACC,YAAY,EAAE;EAEH;EAEvCC,SAAS;IACP,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIC,OAAO,GAAG,IAAIb,WAAW,EAAE;IAC/Ba,OAAO,GAAGA,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IACzD,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAY,IAAI,CAACC,OAAO,GAAC,OAAO,EAAC;MAACH;IAAO,CAAC,CAAC;EACjE;EAEAI,cAAc;IACZ,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAgB,IAAI,CAACC,OAAO,GAAC,OAAO,CAAC;EAC3D;EAEAE,WAAW;IACT,OAAO,IAAI,CAACb,IAAI,CAACU,GAAG,CAAe,IAAI,CAACC,OAAO,GAAC,gBAAgB,CAAC;EACnE;EAEAG,aAAa,CAACC,EAAS;IACrB,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIC,OAAO,GAAG,IAAIb,WAAW,EAAE;IAC/Ba,OAAO,GAAGA,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IACzD,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAU,IAAI,CAACC,OAAO,GAAC,QAAQ,GAACI,EAAE,EAAC;MAACP;IAAO,CAAC,CAAC;EACnE;EAEAQ,kBAAkB,CAACD,EAAS;IAC1B,OAAO,IAAI,CAACf,IAAI,CAACU,GAAG,CAAc,IAAI,CAACC,OAAO,GAAC,QAAQ,GAACI,EAAE,CAAC;EAC7D;EAEAE,gBAAgB,CAACF,EAAS;IACxB,OAAO,IAAI,CAACf,IAAI,CAACkB,MAAM,CAAU,IAAI,CAACP,OAAO,GAAC,QAAQ,GAACI,EAAE,CAAC;EAC5D;EACAI,uBAAuB,CAACC,OAA2B;IACjD,OAAO,IAAI,CAACpB,IAAI,CAACqB,GAAG,CAAU,IAAI,CAACV,OAAO,GAAC,OAAO,EAACS,OAAO,CAAC;EAC7D;EAEAE,4BAA4B,CAACF,OAA2B;IACtD,OAAO,IAAI,CAACpB,IAAI,CAACqB,GAAG,CAAU,IAAI,CAACV,OAAO,GAAC,OAAO,EAACS,OAAO,CAAC;EAC7D;EAEAG,WAAW,CAACC,KAAU;IACpB,OAAO,IAAI,CAACxB,IAAI,CAACyB,IAAI,CAAU,IAAI,CAACd,OAAO,GAAC,gBAAgB,EAACa,KAAK,CAAC;EACrE;EAEAE,cAAc,CAACX,EAAW;IACxB,OAAO,IAAI,CAACf,IAAI,CAACkB,MAAM,CAAU,IAAI,CAACP,OAAO,GAAC,QAAQ,GAACI,EAAE,CAAC;EAC5D;;AAnDWjB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAA6B,SAAb7B,aAAa;EAAA8B,YAFZ;AAAM","names":["HttpHeaders","environment","BehaviorSubject","OrdersService","constructor","http","apiUrl","orderSource","asObservable","GetOrders","token","localStorage","getItem","headers","set","get","baseUrl","GetAdminOrders","getDelivery","GetOrdersById","id","GetAdminOrdersById","DeleteAdminOrder","delete","UpdateOrderConfirmation","details","put","UpdateAdminOrderConfirmation","AddDelivery","value","post","deleteDelivery","factory","providedIn"],"sourceRoot":"","sources":["/Users/godwinonah/Documents/BagShop-Client-App/client/src/app/orders/orders.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { BehaviorSubject} from 'rxjs';\nimport { IAdminOrder } from '../prodsharemod/models/IAdminOrder';\nimport { IDelivery } from '../prodsharemod/models/IDelivery';\nimport { IOrderConfirmation } from '../prodsharemod/models/IOrderConfirmation';\nimport { IOrders } from '../prodsharemod/models/IOrders';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  baseUrl = environment.apiUrl;\n  private orderSource = new BehaviorSubject<IOrders|null>(null);\n  orders$  = this.orderSource.asObservable();\n\n  constructor(private http:HttpClient) { }\n\n  GetOrders(){\n    const token = localStorage.getItem('token');\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', `Bearer ${token}`);\n    return this.http.get<IOrders[]>(this.baseUrl+'order',{headers})\n  }\n\n  GetAdminOrders(){\n    return this.http.get<IAdminOrder[]>(this.baseUrl+'admin')\n  }\n\n  getDelivery(){\n    return this.http.get<IDelivery []>(this.baseUrl+'order/delivery')\n  }\n\n  GetOrdersById(id:number){\n    const token = localStorage.getItem('token');\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', `Bearer ${token}`);\n    return this.http.get<IOrders>(this.baseUrl+'order/'+id,{headers})\n  }\n\n  GetAdminOrdersById(id:number){\n    return this.http.get<IAdminOrder>(this.baseUrl+'admin/'+id)\n  }\n\n  DeleteAdminOrder(id:number){\n    return this.http.delete<boolean>(this.baseUrl+'admin/'+id)\n  }\n  UpdateOrderConfirmation(details: IOrderConfirmation ){\n    return this.http.put<boolean>(this.baseUrl+'order',details)\n  }\n\n  UpdateAdminOrderConfirmation(details: IOrderConfirmation){\n    return this.http.put<boolean>(this.baseUrl+'admin',details)\n  }\n\n  AddDelivery(value: any){\n    return this.http.post<boolean>(this.baseUrl+'order/delivery',value)\n  }\n\n  deleteDelivery(id : number){\n    return this.http.delete<boolean>(this.baseUrl+'order/'+id); \n  }\n\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}