{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { map, of } from 'rxjs';\nimport { ShopParameters } from '../prodsharemod/models/shopParameters';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProdshopmodService {\n  constructor(http) {\n    this.http = http;\n    this.url = environment.apiUrl;\n    this.products = [];\n    this.brands = [];\n    this.types = [];\n    this.shopParams = new ShopParameters();\n    this.cashe = new Map();\n  }\n  getProducts(useCashe = true) {\n    if (!useCashe) this.cashe = new Map();\n    if (this.cashe.size > 0 && useCashe) {\n      if (this.cashe.has(Object.values(this.shopParams).join('-'))) {\n        this.pagination = this.cashe.get(Object.values(this.shopParams).join('-'));\n        if (this.pagination) return of(this.pagination);\n      }\n    }\n    let params = new HttpParams();\n    if (this.shopParams.brandId !== 0) params = params.append('brandId', this.shopParams.brandId.toString());\n    if (this.shopParams.typeId !== 0) params = params.append('typeId', this.shopParams.typeId.toString());\n    if (this.shopParams.search) params = params.append('search', this.shopParams.search);\n    params = params.append('sort', this.shopParams.sort);\n    params = params.append('pageIndex', this.shopParams.pageNumber.toString());\n    params = params.append('pageSize', this.shopParams.pageSize.toString());\n    return this.http.get(this.url + 'products', {\n      params\n    }).pipe(map(response => {\n      this.cashe.set(Object.values(this.shopParams).join('-'), response);\n      this.pagination = response;\n      return response;\n    }));\n  }\n  setShopParams(params) {\n    this.shopParams = params;\n  }\n  getShopParams() {\n    return this.shopParams;\n  }\n  getProduct(id) {\n    const product = [...this.cashe.values()].reduce((accumulator, paginationResult) => {\n      return {\n        ...accumulator,\n        ...paginationResult.data.find(x => x.id == id)\n      };\n    }, {});\n    if (Object.keys(product).length !== 0) return of(product);\n    return this.http.get(this.url + 'products/' + id);\n  }\n  getBrands() {\n    if (this.brands.length > 0) return of(this.brands);\n    return this.http.get(this.url + 'products/brands').pipe(map(brands => this.brands = brands));\n  }\n  getProductTypes() {\n    if (this.types.length > 0) return of(this.types);\n    return this.http.get(this.url + 'products/types').pipe(map(types => this.types = types));\n  }\n  UploadProduct(value) {\n    return this.http.post(this.url + 'products', value);\n  }\n  saveProductPicture(formData) {\n    return this.http.post(this.url + 'products/savePicture', formData);\n  }\n  UploadBrand(id, value) {\n    var brand = {\n      id: id,\n      Name: value\n    };\n    return this.http.post(this.url + 'productBrand', brand);\n  }\n  UploadType(id, value) {\n    var type = {\n      id: id,\n      Name: value\n    };\n    return this.http.post(this.url + 'productType', type);\n  }\n  DeleteProduct(id) {\n    return this.http.delete(this.url + 'products/' + id);\n  }\n  DeleteType(id) {\n    return this.http.delete(this.url + 'productType/' + id);\n  }\n  DeleteBrand(id) {\n    return this.http.delete(this.url + 'productBrand/' + id);\n  }\n  GetAdverts() {\n    return this.http.get(this.url + 'advert');\n  }\n}\nProdshopmodService.ɵfac = function ProdshopmodService_Factory(t) {\n  return new (t || ProdshopmodService)(i0.ɵɵinject(i1.HttpClient));\n};\nProdshopmodService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProdshopmodService,\n  factory: ProdshopmodService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","map","of","ShopParameters","environment","ProdshopmodService","constructor","http","apiUrl","Map","getProducts","useCashe","cashe","size","has","Object","values","shopParams","join","pagination","get","params","brandId","append","toString","typeId","search","sort","pageNumber","pageSize","url","pipe","response","set","setShopParams","getShopParams","getProduct","id","product","reduce","accumulator","paginationResult","data","find","x","keys","length","getBrands","brands","getProductTypes","types","UploadProduct","value","post","saveProductPicture","formData","UploadBrand","brand","Name","UploadType","type","DeleteProduct","delete","DeleteType","DeleteBrand","GetAdverts","factory","providedIn"],"sourceRoot":"","sources":["/Users/godwinonah/Documents/BagShop-Client-App/client/src/app/products/prodshopmod.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { IProductPagination } from '../prodsharemod/models/IProductPagination';\nimport { HttpClient,HttpParams } from '@angular/common/http';\nimport { IBrands } from '../prodsharemod/models/IBrands';\nimport { IProductTypes } from '../prodsharemod/models/IProductTypes';\nimport { map, Observable, of } from 'rxjs';\nimport { ShopParameters } from '../prodsharemod/models/shopParameters';\nimport { IProduct } from '../prodsharemod/models/IProduct';\nimport { IAdverts } from '../prodsharemod/models/IAdverts';\nimport { environment } from 'environments/environment';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdshopmodService {\n  url = environment.apiUrl;\n  products : IProduct[]=[];\n  brands : IBrands[] = [];\n  types : IProductTypes[]=[];\n  pagination? :IProductPagination<IProduct[]>;\n  shopParams = new ShopParameters();\n  cashe = new Map<string,IProductPagination<IProduct[]>>();\n  \n\n  constructor(private http: HttpClient) {\n   }\n\n  getProducts(useCashe=true): Observable<IProductPagination<IProduct[]>>{\n   \n    if(!useCashe) this.cashe = new Map();\n    if(this.cashe.size > 0 && useCashe){\n      if(this.cashe.has(Object.values(this.shopParams).join('-'))){\n        this.pagination = this.cashe.get(Object.values(this.shopParams).join('-'));\n        if(this.pagination)return of(this.pagination);\n      }\n    }\n\n    let params = new HttpParams();\n\n      if(this.shopParams.brandId!== 0)\n      params = params.append('brandId',this.shopParams.brandId.toString())\n\n      if(this.shopParams.typeId !== 0)\n      params = params.append('typeId',this.shopParams.typeId.toString())\n\n      if(this.shopParams.search)\n      params = params.append('search',this.shopParams.search)\n\n      params = params.append('sort',this.shopParams.sort)\n      params = params.append('pageIndex',this.shopParams.pageNumber.toString())\n      params = params.append('pageSize',this.shopParams.pageSize.toString())\n   \n      return this.http.get<IProductPagination<IProduct[]>>\n    (this.url+'products',{params})\n    .pipe(map(\n      response =>{ \n        this.cashe.set(Object.values(this.shopParams).join('-'),response);\n        this.pagination = response;\n        return response;\n        }\n      ))\n   }\n\n   setShopParams(params:ShopParameters){\n    this.shopParams = params;\n   }\n\n   getShopParams(){\n    return this.shopParams;\n   }\n\n   getProduct(id:number){\n    const product = [...this.cashe.values()].reduce((accumulator,paginationResult)=>{\n      return { ...accumulator,...paginationResult.data\n        .find( x => x.id == id)\n      }}, {} as IProduct)\n    if(Object.keys(product).length !== 0) return of(product);\n    return this.http.get<IProduct>(this.url+'products/'+id)\n   }\n\n   getBrands(){\n    if(this.brands.length>0) return of(this.brands);\n    return this.http.get<IBrands[]>(this.url+'products/brands').pipe(map(\n      brands =>\n      \n        this.brands=brands  \n        \n      ))\n   }\n\n   getProductTypes(){\n    if(this.types.length>0) return of(this.types);\n    return this.http.get<IProductTypes[]>(this.url+'products/types').pipe(map(\n      types =>\n        this.types=types \n      ))}\n\n  UploadProduct(value:any){\n    return this.http.post<string>(this.url+'products',value);   \n}\n\n  saveProductPicture(formData:any){\n    return this.http.post(this.url+'products/savePicture',formData);\n}\n\n  UploadBrand(id:number,value:any){\n  var brand = {\n    id:id,\n    Name:value\n  }\n  return this.http.post<string>(this.url+'productBrand',brand);\n}\n\n  UploadType(id:number,value:any){\n  var type = {\n    id:id,\n    Name:value\n  }\n  return this.http.post<string>(this.url+'productType',type);\n}\n\n  DeleteProduct(id:number){\n  return this.http.delete(this.url+'products/'+id); \n}\n\n  DeleteType(id:number){\n  return this.http.delete(this.url+'productType/'+id); \n}\n\n  DeleteBrand(id:number){\n  return this.http.delete(this.url+'productBrand/'+id); \n}\n\n GetAdverts(){\n  return this.http.get<IAdverts[]>(this.url+'advert'); \n}\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}